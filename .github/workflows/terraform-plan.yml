name: Terraform Plan

on:
  pull_request:
    branches: [ "main", "master" ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-plan.yml'
  push:
    branches: [ "main", "master" ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-plan.yml'
  workflow_dispatch:

env:
  TF_VERSION: "1.9.0"
  AWS_REGION: "us-east-1"
  AWS_ACCOUNT_ID: "907849381252"
  CLUSTER_NAME: "kafka-eks-new"
  GITHUB_REPO: "leketech/kafka-eks-terraform"

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Debug - Show Environment
        run: |
          echo "AWS Region: ${{ env.AWS_REGION }}"
          echo "State Bucket: ${{ secrets.TF_STATE_BUCKET }}"
          echo "DynamoDB Table: ${{ secrets.TF_STATE_LOCK_TABLE }}"
          echo "GitHub Repository: ${{ env.GITHUB_REPO }}"
          echo "AWS Account ID: ${{ env.AWS_ACCOUNT_ID }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GitHubActionsKafkaDeployRole
          role-session-name: github-actions-${{ github.sha }}
        continue-on-error: true

      - name: Debug - Verify AWS Credentials
        run: |
          echo "Verifying AWS credentials..."
          aws sts get-caller-identity || echo "Failed to get caller identity"
        continue-on-error: true

      - name: Check Role Existence
        run: |
          echo "Checking if role exists..."
          aws iam get-role --role-name GitHubActionsKafkaDeployRole || echo "Role does not exist or cannot be accessed"
        continue-on-error: true

      - name: Terraform Init
        run: |
          cd terraform/environments/prod
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=kafka-eks-new/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_STATE_LOCK_TABLE }}"

      - name: Terraform Validate
        run: |
          cd terraform/environments/prod
          terraform validate

      - name: Terraform Plan
        run: |
          cd terraform/environments/prod
          terraform plan \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="aws_account_id=${{ env.AWS_ACCOUNT_ID }}" \
            -var="cluster_name=${{ env.CLUSTER_NAME }}" \
            -var="github_repo=${{ env.GITHUB_REPO }}" \
            -var="terraform_state_bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -var="dynamodb_table=${{ secrets.TF_STATE_LOCK_TABLE }}"