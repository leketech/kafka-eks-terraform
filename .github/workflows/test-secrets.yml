---
name: Test Secrets

on:
  workflow_dispatch:

env:
  AWS_REGION: "us-east-1"

jobs:
  test:
    name: Test Secrets
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug - Show Environment
        run: |
          echo "=== Environment Variables ==="
          echo "AWS Region: ${{ env.AWS_REGION }}"
          echo "TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}"
          echo "TF_STATE_LOCK_TABLE: ${{ secrets.TF_STATE_LOCK_TABLE }}"
          
          # Check if secrets are set
          if [ -z "${{ secrets.TF_STATE_BUCKET }}" ]; then
            echo "❌ ERROR: TF_STATE_BUCKET secret is not set!"
            exit 1
          else
            echo "✅ TF_STATE_BUCKET secret is set"
          fi
          
          if [ -z "${{ secrets.TF_STATE_LOCK_TABLE }}" ]; then
            echo "❌ ERROR: TF_STATE_LOCK_TABLE secret is not set!"
            exit 1
          else
            echo "✅ TF_STATE_LOCK_TABLE secret is set"
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::907849381252:role/GitHubActionsKafkaDeployRole
          role-session-name: github-actions-test

      - name: Test AWS Access
        run: |
          echo "=== AWS Access Test ==="
          echo "Testing AWS credentials..."
          aws sts get-caller-identity

      - name: Test S3 Access
        run: |
          echo "=== S3 Access Test ==="
          echo "Testing S3 bucket access..."
          aws s3 ls "${{ secrets.TF_STATE_BUCKET }}"

      - name: Test DynamoDB Access
        run: |
          echo "=== DynamoDB Access Test ==="
          echo "Testing DynamoDB table access..."
          aws dynamodb describe-table --table-name "${{ secrets.TF_STATE_LOCK_TABLE }}"
          
          echo "Testing DynamoDB scan permission..."
          aws dynamodb scan --table-name "${{ secrets.TF_STATE_LOCK_TABLE }}" --max-items 1